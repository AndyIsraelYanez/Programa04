// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto.AccesoDatos;

namespace Proyecto.AccesoDatos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200810044058_MasCambios")]
    partial class MasCambios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proyecto.Entidades.Entrenador", b =>
                {
                    b.Property<int>("EntrenadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("EntrenadorId");

                    b.ToTable("Entrenadores");
                });

            modelBuilder.Entity("Proyecto.Entidades.Equipo", b =>
                {
                    b.Property<string>("EquipoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipoId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("Proyecto.Entidades.JugadorEntrenador", b =>
                {
                    b.Property<int>("EntrenadorId")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.HasKey("EntrenadorId", "JugadorId");

                    b.HasIndex("JugadorId");

                    b.ToTable("JugadorPorEntrenador");
                });

            modelBuilder.Entity("Proyecto.Entidades.Uniforme", b =>
                {
                    b.Property<int>("UniformeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniformeId");

                    b.HasIndex("JugadorId");

                    b.ToTable("Uniformes");
                });

            modelBuilder.Entity("Proyecto.Negocio.Jugador", b =>
                {
                    b.Property<int>("JugadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<string>("EquipoId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JugadorId");

                    b.HasIndex("EquipoId1");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("Proyecto.Negocio.JugadorTipoPosicion", b =>
                {
                    b.Property<int>("TipoPosicionId")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.HasKey("TipoPosicionId", "JugadorId");

                    b.HasIndex("JugadorId");

                    b.ToTable("JugadorPorPosicion");
                });

            modelBuilder.Entity("Proyecto.Negocio.TipoPosicion", b =>
                {
                    b.Property<int>("TipoPosicionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoPosicionId");

                    b.ToTable("TipoPosiciones");
                });

            modelBuilder.Entity("Proyecto.Entidades.JugadorEntrenador", b =>
                {
                    b.HasOne("Proyecto.Entidades.Entrenador", "Entrenador")
                        .WithMany("JugadorEntrenadores")
                        .HasForeignKey("EntrenadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Negocio.Jugador", "Jugador")
                        .WithMany("JugadorEntrenadores")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto.Entidades.Uniforme", b =>
                {
                    b.HasOne("Proyecto.Negocio.Jugador", "Jugador")
                        .WithMany("Uniformes")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto.Negocio.Jugador", b =>
                {
                    b.HasOne("Proyecto.Entidades.Equipo", "Equipo")
                        .WithMany("Jugadores")
                        .HasForeignKey("EquipoId1");
                });

            modelBuilder.Entity("Proyecto.Negocio.JugadorTipoPosicion", b =>
                {
                    b.HasOne("Proyecto.Negocio.Jugador", "Jugador")
                        .WithMany("JugadorTipoPosiciones")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Negocio.TipoPosicion", "TipoPosicion")
                        .WithMany("JugadorTipoPosiciones")
                        .HasForeignKey("TipoPosicionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
